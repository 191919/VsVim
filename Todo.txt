Version 0.6
===
X - 'Y in normal mode
X - Add mark support to range parsing
X - Delete key in normal mode
X - All motion keys for basic motions(left,up,down,right)
X - Verify arrow keys are translated from Visual Studio Commands
X - Verify space bar is translated to Visual Studio Commands
X - Check on the behavior of tab in normal mode
X - Shift lines in commnad mode
X - Help "copy-move" start from there
X - Need a way to disable Vim via keyboard
X - gp in Normal mode
X - gP in normal mode
X - Bug: 5x does not delete 5 characters
X - Bug: dw at end of line, should it delete the line break as well?
X - Rename Modes_Common_operations to ModeUtil or something like that
X - Test NormalMode_Operations indepnedently
X - Command mode :delete
X - View close should clear out the markers
X - Rename IVimBuffer->WillProcess to CanProcess for consistency
X - O should enter insert mode
X - Horizontal offset issue Noah raised
X - Normal mode operations should be an interface
X - Switch normal mode tests to use the interface
X - IOperations shouldn't take NormalMode data so we can make it and a lot of other things internal again
X - Move ModeUtil.Result out of ModeUtil
X - Implement z scrolling in normal mode
X - Move more operations to the interfaces in normal mode
X - Join needs to move into ICommonOperations
X - Move Shift into ICommonOperations
X - Implement IEditorOperationsTest
- Remove BufferUtil

Version 0.7
=== 
- Implement normal mode .
- Help delete-insert
- Should MoveCaretX reset selection if the caret doesn't move?
- Mark navigation for global marks
- Marks Undo Support
- Visual mode
  - Copy-move
  - delete-insert
- Edits need to understand cursor selection
- Finish range parsing
- :s in command mode
- :et in command mode
- :w in command mode
- Need a way to disable Vim on startup
- IOperations.Paste* should have an enum instead of a bool parameter

Version 5.4
===
X - r in normal mode
X - O in normal mode
X - :linecount is broken in command mode
X - Track buffer close in some way
X - When the view is closed, kill the block caret
X - Rename MockFactory -> MockObjectFactory
X - Rename RangeCaptureTest -> RangeUtilTest

Version 5.3
===
X - Fix Command mode to be more extensible
X - :$ in Command Mode
X - j in command mode
X - Escape out of a command should clear status in command mode
X - Initial : should update status in command mode
X - Support the don't remove blanks part of join
X - gJ in normal mode
X - Command mode needs to actually hook into ranges
X - Actually implement range capture
X - Match cursor color
X - Fix the inconsistent naming of member fields
X - Fix the Caret thing



Version 5.2
===
X - Fix normal mode eating other commands 
X - Move modes into separate namespaces
X - Modes need to expose the key combos they care about
X - Remove conflicting key bindings
X - Handle CTRL-U and CTRL-D in normal mode
X - j: in normal mode
X - Typing shouldn't work in normal mode
X - Ctrl+]: in normal mode
X - Mark navigation support in normal mode
X - Marks Stop listening for buffer changes at some point
X - Make appropriate items internal

Version .5.1
===
X - VS: Delete in normal mode deletes

Version .5
===

X - Delete key is not updating the incremental search status message properly
X - IncrementalSearch should be case insensitive
X - Fix Motion capture to understand characterwise, linewise and inclusive, exclusive
X - Get the motion information into the Register structure
X - Pasting a linewise motion pastes line a characterwise motion
X - Delete needs to understand linewise motion vs characterwise motion
X - BufferUtil.DeleteSpan doesn't set the proper MotionKind and OperationKind on the new value
X - Need to implement a count on end of line motion
X - p needs to move the cursor to the start of the next line if it's a linewise paste
X - dd should delete the entire line.  Not from the current caret point
X - yy should yank the entire line.  Not just from the current caret point
X - X is not implemented
X - Paste of a line in a buffer created by 'dd' causes the LF/CR problems
X - Delete of incremental search characters is not handled properly in VsVim
X - 'o' command at the end of the buffer causes the LF/CR problems
X - Paste at end of buffer causes crash
X - j at the end of the buffer causes a crash
X - Fix the Cursor to be more visibly Normal mode  
X - Enter should indent the cursor to the indent on the previous line.  
X - Normal mode o at end of the file should be fixed.  Right now it either doesn't work or crashes
X - Delete key doesn't work in insert mode
X - Make sure O and o do not explicitly position the caret.  Let the language service do that
X - Ocassionally, unable to leave insertion modei
X - x is broken
X - b is broken
X - Cursor won't switch to black for insert mode
X - Sholud make CommandState an interface 
X - w is broken.  Jumps around the file too much.  Works for some lines but not others
X - # is broken
X - w skips the first word on the line
X - Remove ModeKind from ICommandState.  Intstead return a type that is indicative that a mode change needs to occur
X - Moving the mouse to the laptop causes weird characters to be inserted.
X  * Appears to be an InputDirector issue.  Doesn't go through the FsVim code
X - Starting VS with an open file puts the emulation into a weird state
X - Command mode :$ crashes the IDE
X - All of the TssUtil::FindNext/FindPrevious should be non-wrapping
X - The 'o' command is apparently still messing up
X - Motion commands are not exiting correctly
X - "w" motion needs to implement a count
X - Hitting escape in insert mode is causing escape to be inserted into the buffer
X - Typing in an invalid motion should give some warning
X - Enter must still cancel an invalid motion
X - Enter in normal should move to next line
X - Do not Complete in Normal mode must reset the run function
X - Motion should have a WaitForMode which indiciates error conditions
X - Motion keys should clear selection
X - 'u' is not implemented
X - Insert Mode: CTRL+D



